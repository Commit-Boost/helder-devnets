ethereum_cl_bootnode: "{{ hostvars['bootnode-1']['cl_bootnode_fact_enr'] }}"

# role: eth_inventory_web
eth_inventory_web_container_networks: "{{ docker_networks_shared }}"
eth_inventory_web_container_env:
  VIRTUAL_HOST: "{{ server_fqdn }}"
  VIRTUAL_PORT: "80"
  VIRTUAL_PATH: "/meta/api"
  VIRTUAL_DEST: "/"
  LETSENCRYPT_HOST: "{{ server_fqdn }}"

# role: ethpandaops.general.ethereum_node
ethereum_node_el: geth
ethereum_node_cl: teku
ethereum_node_cl_validator_enabled: false

# role: ethpandaops.general.teku
teku_container_name: beacon
teku_container_image: "{{ default_ethereum_client_images.teku }}"
teku_container_env:
  VIRTUAL_HOST: "{{ ethereum_node_beacon_hostname }}"
  VIRTUAL_PORT: "{{ ethereum_node_cl_ports_http_beacon | string }}"
  LETSENCRYPT_HOST: "{{ ethereum_node_beacon_hostname }}"
teku_container_volumes:
  - "{{ teku_datadir }}:/data"
  - "{{ teku_auth_jwt_path }}:/execution-auth.jwt:ro"
  - "{{ eth_testnet_config_dir }}:/network-config:ro"
teku_container_command_extra_args:
  - --network=/network-config/config.yaml
  - --initial-state=/network-config/genesis.ssz
  - --p2p-peer-upper-bound=100
  - --data-storage-non-canonical-blocks-enabled=true
  - --data-storage-mode=PRUNE
  - --logging=info
  - --Xlog-include-p2p-warnings-enabled
  - --metrics-block-timing-tracking-enabled

# role: ethpandaops.general.geth
geth_container_name: execution
geth_container_image: "{{ default_ethereum_client_images.geth }}"
geth_container_env:
  VIRTUAL_HOST: "{{ ethereum_node_rcp_hostname }}"
  VIRTUAL_PORT: "{{ ethereum_node_el_ports_http_rpc | string }}"
  LETSENCRYPT_HOST: "{{ ethereum_node_rcp_hostname }}"
geth_container_command_extra_args:
  - --http.api=eth,net,web3,debug,admin
  - --http.vhosts=*
  - --networkid={{ ethereum_network_id }}
  - --syncmode=full
  - --gcmode=archive
  - --state.scheme=hash
geth_init_custom_network: true
geth_init_custom_network_genesis_file: "{{ eth_testnet_config_dir }}/genesis.json"
geth_container_pull: true

geth_init_custom_network_container_command:
  - --datadir=/data
  - init
  - --state.scheme=hash
  - /genesis.json
